<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABdAFwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5b8O+A9DvtFsbiey8yWWBHdvNcZJUE8Bq1F+G/h3vp2f+28n/
        AMVVjwox/wCEe00Z/wCXaP8A9BFbavtxXr2PIlVqKT95/eYSfDLw2eunf+R5P/iql/4Vh4ZH/MNz/wBt
        5f8A4qt9JMdD+dSiTpzzSJ9rU/mf3s55Phh4Xx82mH/wIl/+Kp6/C7wq3/MM/wDJiX/4qt17lY1yzAAc
        5r6e/Z//AGML34meGT4m8X3114Y0SZd9lDGircXCdpTvGEQ9sjLdeBglNqKuyo1K0naMn958lp8KfCZU
        Z0zJ/wCviX/4qtnw/wDs/wCh+Jk1J7DR4pE0+1a8uDLfSR4jBAO3L/MckcCvX/2gP2eta+A2qJMZJNW8
        L3T7LXVNm0q//PKYDhX9D0YdO4HBeFZrKc6gb7R9T1RXtmjtX0/fiGY4wz7QcjHY/kauCU2uxy4rEYij
        Tk4N8y9X+F1f7zj4vhH4PcA/2Tx/18zf/F1Ovwf8Gtx/ZGD/ANfM2P8A0Ot22nyuCee4q2ku/A7CosdH
        tqv8z+85sfBvwcOukf8Ak1N/8XTh8GvBhH/II/8AJmb/AOLrqBLz7CpftA7GlYHWq/zP7zybws5Ggabx
        n/Ro/wD0EVtK3vWB4ZfboOm8/wDLtH/6CK2UetCZ/Ey0JAozmmvcKOc496hZi20KpdmIVVUZLE8AAdz7
        V9u/s5fsuaL8JPDx+K/xie30wWMf2u102+x5dkOqyzL/ABTHjbHztJHBbAWJSUVdhGDm7Iz/ANmT9k2z
        0rSx8TPiysWmaJZR/bLTSdRIRAq8ie6B6KOqxnrwW7LXR+Ktf8R/tq3E9ppt3feD/gvbSFFu4l2XmvSq
        eGUH7sKsAeeMjnJ4Wtfarr37ZetxatrkF34e+DFnN5mm6G5Mdzr7KeJ7jBysWRwv4DJywg+NviiXwv8A
        GH4V6RpvxDfwTYTW80a+GLSxleHUlXIXmNdkYQADDY6cU4U23zT3/I8rF49Rvh8O+936f1/mbvhT4hXn
        ge8Hwg+Nhh1zQ9UQ22ieK7tf9H1GL+GC5J+5MvGGJyDjnox9z+FPw6sPgd8OpNA0aeW5gN9LdK9wMSAS
        OCFYj72AAu7vivlz4CQWHxq/Z6m07xX4vf4r2Vzfzo+sXFvLbSKQE2hBIA6umchgP4iORkVP8Nv2gpPg
        X43Pwq8eeIota0SIJ/ZHiKRwZbSNjiOC8HbHA3duM/KRjKrRevJ9x1YLMIVJujV0mtP6ufO3xUlUfFTx
        gVCqP7XujtUYA/etWBFPnGK92/ak+AN94X1zUPG+jB9Q8P6jM11eBPmaykc5LHHWJichv4c4PGDXz7FL
        hsVpFqSTR1Si4tpmmJCQcdalVgByBmqIkIHXg1MsoApknl/ht/8AiQ6d/wBe8f8A6CK1lckelYnhs/8A
        Ej0/2gj/APQRWruxmqLn8TPa/wBlL4meBvhT8T21/wAeWMt3bQWjDT54rfz/ALLc7gRJs9doYBhnaT75
        HueneIZv2zvFlx4q8Su8Hw80G9MGk+EsnbczBQ32i7I4bhhhBkckdM7vhuUljg19ifsa3Pk/C/VRkKBq
        0hOeP+WUdOEE5X6nl5liKlDCvkdtT6M1TX7HQdLnvr2eGx0+ziLySuQkcUaj8gAOAB7AV4nH8SfFnxov
        YtV+GvwYTxnYWJeO18S+IPKtY/8Aa+ztJg4P+yfriuJ8deP9F/aE+MfgT4T6fdyXHh271pBrV3CxWG6W
        NS5t0YdeFIJHGWGOlfQf7cPxs8Yfs4fC7wy/w30m1s7Wa7+wy3gsxLDp0KR5jjWP7q78EAngBSByRTqT
        cJKMVds8nLcsWIpvEYltR6JaN+vU+e/Hfxk8a/C/RrTwZJ8Mrb4Va9qlx5Vrejy10xFb78sbINpccevb
        2rLsvAejeH/DV/ZXR/ta6vgX1G/vvmkvG6ksT91R1AB465zzX1Bpcd1+1F+yfZD4gaPHp2r61pkk7R+S
        Y/IuEL+RdRq3MZO1Xx6MR0NfGfwl8I+JPjZomnRavLLpPhKzRYrq6jOJtTdeDHGT0UcAv0+p6b0sww2E
        pTq4lW5fx9DyOIMnrL2TwlXkpN3k29e613fkl1s33Xefs+ftIyfDizuvDviNb3W/h0krWmn6o0XnNaNt
        JNvz/ro8Z46rn0OK8c8XX2kah4t1i58P2r2OiTXcj2VtIMNFET8q47fTsMCvZf2lLDS/D/gHwvoum2kV
        nbW925gt4VwscYjIJ+pLDk8k5Jr58hkzjB5FePg8VHG0/rEY8qbenoz6/AV5YjDxcne2l3u7dX6l5Zem
        TUglzVPd3FSq4A7V3Heec+HGP9iWH/XCP/0EVrBsCsXw823RrD/rgn/oIrV3jHWmXL4mNlbnivQPhani
        bxPpGqeF7XV5dK8JTTLcai8AAlkYrt8pG/2gBnsAMnPQ+dytnpxXefDbx5YeFfDesLe3AiaOZZwoHzOC
        oXC+pyP1r0MBTp1MQlWdo6nznEFTEUsvnLCxvO6S0vZtpXt37eZ3vjkR/Dez8L634XW20q88JXqahYK3
        EZZSCyOereYMgk8mvv74EftEeFv2kfBt5qegmW2v7OFP7V0e7Q+ZZu6kqCcbXQ7WKsOoHIB4r87dK8LX
        3jS8g1zxbEYLOL95YaBIOM9pbkdz3CHr3wOD9H/8E5pBLrnxzdslvPscn1/dT1xZli8Pi68lQWkVv03S
        PN4Sq1cPfAVqnPPWUutm2rq/V3d30T79Ox/aO+Pb+H7e88A+EYZdV+IerWmwKFIg0u3lBU3M0h4Hyk7R
        64J7A8l8M/DMPg/wbY6PHcxw6bo1oBc6hcnbGg6s7H1ZicL1JIArzrx54vh8I/tSeP77xnJb6c7aPaRW
        FtpjG4kvYVbMQC9VlYfeVsAdc4wTlP441XxrcRXGqBbDTIJPMsNAtmzFAe0kzf8ALab/AGjwv8IHWvis
        11SjU0grO3WTt+CXf9S+IcV+85artGOy6t/ol3/pRftGa/Fqml2kkYZUkvAkSyDDCNUbqOxOcke9eGRS
        YxXRfFXxYuva9DZW7h7ewDKzDkNKfvY+mAPzrlI5COtezlNCWHwUIz3d3970/A9bJqU6eCg6i1ld/e9P
        wsaIlyR6U4TYqmr7TzTw5+tewe0cLoL/APEmsOf+WCf+gitINgVlaEc6PYj/AKYp/wCgitANx71VipfE
        xWk5xjNdV8LdOs5fEMuo3SpLJYosltE4BAkJwJMHqVxx6Eg9hXIk55pbbUrjTLhZ7WUxygEZ9j2NZ1Iu
        UGouzPPx1GpiMNOlRlyya0f9d9j2fxP8RmsZRpulW7arr1wCY7dTkJ3Lyt2A6nP419Ff8EyluYrn40fa
        rhL67ElgZZkQhJG8ucnA9Ow9QK+FvD3iq68Lz3UkSR3C3ePtHmfffBz97r15x06elfUn7B37Q3hP4eeM
        vHWmeJLj+wY/FSQy2moXEgFtBJDHIDHI38O7flW6ZGOpGfOp0J0nKKjpbfu7r7up5eTZa8rxCiorlcdZ
        d3ppbovz3b2PMvixYaToHx48b2eg65J4psnuftVzqU/zyw3bkmS2M3SXy+gI6DjqDXNap4+ltbdrHT5S
        s7Da86/wD0X39+1U/jR400DxR8U/EmqeCLKTRfDl/MH8j7ouJf8AlpcBP+WYkPzbB9TycDj7XCsCKt4G
        FSr7Wqr7af5hLJqNfHSxlazXRdPV3/LY1bfCEGrgkGRVCIkkZ6VYVsHivRPo2Ww/HripBNgVTEhB65pc
        k85xQI5LQj/xKLL/AK4p/wCgitEVkaC+7SbT2iQfoK0x0q0Kb95jyM8dKia139WxS7jTi/yilYVyFtPR
        s/viP+A1C+lr0878Spq2rmlzmmT8xLfSYerXeD/uE1cjsoYuk5b/AIAarqamDnND16AvUtKFVSBT1aqy
        nGKcrktUl3LIJPenK/HY1XDnNODkUWC5/9k=
</value>
  </data>
</root>